diff --git a/src/include/report.h b/src/include/report.h
index ae879b5..bbb2abc 100644
--- a/src/include/report.h
+++ b/src/include/report.h
@@ -36,6 +36,8 @@ enum {
                                       /* ("run reporters" is always on, has no flag (for now?)) */
     LIBREPORT_RELOAD_DATA = (1 << 3), /* reload problem data after run (needs WAIT) */
     LIBREPORT_DEL_DIR     = (1 << 4), /* delete directory after reporting */
+    LIBREPORT_RUN_CLI     = (1 << 5), /* run 'cli' instead of 'gui' */
+    LIBREPORT_RUN_NEWT    = (1 << 6), /* run 'cli' instead of 'gui' */
 };

 int report_problem_in_dir(const char *dirname, int flags);
diff --git a/src/lib/report.c b/src/lib/report.c
index 4b9f5c9..afe2364 100644
--- a/src/lib/report.c
+++ b/src/lib/report.c
@@ -48,7 +48,24 @@ int report_problem_in_dir(const char *dirname, int flags)
         *pp++ = (char *)dirname;
         *pp = NULL;

-        if (!getenv("DISPLAY"))
+        if(flags & LIBREPORT_RUN_NEWT)
+        {
+            /* we want to run newt first */
+            path1 = BIN_DIR"/report-newt";
+            path2 = "report-newt";
+            pp = args;
+            *pp++ = (char *)"report-newt";
+            if (flags & LIBREPORT_DEL_DIR)
+                *pp++ = (char *)"--delete";
+            if (!(flags & LIBREPORT_ANALYZE))
+                *pp++ = (char *)"-ro"; /* only report */
+            else
+                *pp++ = (char *)"-r"; /* analyze and report */
+            *pp++ = (char *)"--";
+            *pp++ = (char *)dirname;
+            *pp = NULL;
+        }
+        else if(!getenv("DISPLAY") || (flags & LIBREPORT_RUN_CLI))
         {
             /* GUI won't work, use command line tool instead */
             path1 = BIN_DIR"/report-cli";
diff --git a/src/report-python/__init__.py b/src/report-python/__init__.py
index 95941d7..af75f44 100644
--- a/src/report-python/__init__.py
+++ b/src/report-python/__init__.py
@@ -181,5 +181,17 @@ def report(cd, io_unused):
     return r
 """

-def report(pd, io_unused):
+def report(pd, io):
+
+    flags = None
+    if isinstance(io, TextIO.TextIO):
+        flags = (1 << 5)
+    elif isinstance(io, NewtIO.NewtIO):
+        flags = (1 << 0)  # wait for report to finish, so we can restore the screen
+        flags |= (1 << 6) # run newt first
+        io.screen.suspend() # save the state of anaconda windows before we fork
+        result = report_problem_in_memory(pd, flags)
+        io.screen.resume() # restore the previously saved state
+        return result
+
     result = report_problem(pd)
diff --git a/src/report-python/io/NewtIO.py b/src/report-python/io/NewtIO.py
index 6f9670d..12a23c9 100644
--- a/src/report-python/io/NewtIO.py
+++ b/src/report-python/io/NewtIO.py
@@ -18,4 +18,5 @@

 class NewtIO:
     def __init__(self, screen = None):
+        self.screen = screen
         pass
--- libreport-2.0.5__/src/report-python/__init__.py	2011-08-11 10:28:51.268200642 +0200
+++ libreport-2.0.5/src/report-python/__init__.py	2011-08-11 10:32:27.357185865 +0200
@@ -13,7 +13,7 @@
 # Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 
 from _pyreport import *
-
+from report.io import NewtIO, GTKIO, TextIO
 
 #Compatibility with report package:
 # Author(s): Gavin Romig-Koch <gavin@redhat.com>
--- libreport-2.0.5/src/lib/report.c	2011-08-11 13:00:53.030576895 +0200
+++ libreport-2.0.5_/src/lib/report.c	2011-08-11 12:59:49.210581259 +0200
@@ -57,10 +57,7 @@
             *pp++ = (char *)"report-newt";
             if (flags & LIBREPORT_DEL_DIR)
                 *pp++ = (char *)"--delete";
-            if (!(flags & LIBREPORT_ANALYZE))
-                *pp++ = (char *)"-ro"; /* only report */
-            else
-                *pp++ = (char *)"-r"; /* analyze and report */
+            *pp++ = (char *)"-o"; /* report only, newt can't analyze */
             *pp++ = (char *)"--";
             *pp++ = (char *)dirname;
             *pp = NULL;
